// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(CrawlerBrazilGovDataContext))]
    [Migration("20211025161005_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("Domain.Entities.DataSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AditionalInformationId")
                        .HasColumnType("int");

                    b.Property<string>("DownloadedFolder")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AditionalInformationId");

                    b.ToTable("DataSources");
                });

            modelBuilder.Entity("Domain.Entities.DataSourceAditionalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Created")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Format")
                        .HasColumnType("longtext");

                    b.Property<bool>("HasViews")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("InternalId")
                        .HasColumnType("longtext");

                    b.Property<string>("LastModified")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("License")
                        .HasColumnType("longtext");

                    b.Property<bool>("OnSameDomain")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PackageId")
                        .HasColumnType("longtext");

                    b.Property<string>("RevisionId")
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .HasColumnType("longtext");

                    b.Property<string>("UrlType")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DataSourceAditionalInformations");
                });

            modelBuilder.Entity("Domain.Entities.Dataset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AditionalInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int?>("Followers")
                        .HasColumnType("int");

                    b.Property<string>("License")
                        .HasColumnType("longtext");

                    b.Property<string>("Organization")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AditionalInformationId");

                    b.ToTable("Datasets");
                });

            modelBuilder.Entity("Domain.Entities.DatasetAditionalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Manager")
                        .HasColumnType("longtext");

                    b.Property<string>("Source")
                        .HasColumnType("longtext");

                    b.Property<string>("UpdateFrequency")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DatasetAditionalInformations");
                });

            modelBuilder.Entity("Domain.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("DatasetId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DatasetId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Domain.Entities.UrlExtracted", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Search")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("UrlExtracteds");
                });

            modelBuilder.Entity("Domain.Entities.DataSource", b =>
                {
                    b.HasOne("Domain.Entities.DataSourceAditionalInformation", "AditionalInformation")
                        .WithMany()
                        .HasForeignKey("AditionalInformationId");

                    b.Navigation("AditionalInformation");
                });

            modelBuilder.Entity("Domain.Entities.Dataset", b =>
                {
                    b.HasOne("Domain.Entities.DatasetAditionalInformation", "AditionalInformation")
                        .WithMany()
                        .HasForeignKey("AditionalInformationId");

                    b.Navigation("AditionalInformation");
                });

            modelBuilder.Entity("Domain.Entities.Tag", b =>
                {
                    b.HasOne("Domain.Entities.Dataset", "Dataset")
                        .WithMany("Tags")
                        .HasForeignKey("DatasetId");

                    b.Navigation("Dataset");
                });

            modelBuilder.Entity("Domain.Entities.Dataset", b =>
                {
                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
